<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">

    <!-- ManagedService Bean reading from camel.filtering.cfg file. -->
    <bean id="messageFilter" class="de.afinke.blog.camel.MessageFilter"/>
    <service interface="org.osgi.service.cm.ManagedService" ref="messageFilter">
        <service-properties>
            <entry key="service.pid" value="camel.filtering"/>
        </service-properties>
    </service>

    <camelContext xmlns="http://camel.apache.org/schema/blueprint">

        <route id="input">
            <from uri="direct:input"/>
            <!-- We use the messageRouter Bean which will call routeTo method to get the recipient.
            The recipient is either output or trash depending on the header. This allows us dynamic
            filtering within camel routes without restarting the route. -->
            <recipientList>
                <method ref="messageFilter" method="routeTo(${header.country})"/>
            </recipientList>
        </route>

        <!-- Throws the trash away. -->
        <route id="trash">
            <from uri="direct:trash"/>
            <stop/>
        </route>

        <!-- Prints everything which ends up in output. -->
        <route id="output">
            <from uri="direct:output"/>
            <to uri="stream:out"/>
        </route>

    </camelContext>

</blueprint>
